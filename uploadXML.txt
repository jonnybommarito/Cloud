import json
import boto3
from boto3.dynamodb.conditions import Attr
# import xml.etree.ElementTree as ET

def lambda_handler(event, context):
    #estrarre il token dalla chiamata
    # # controllare che il token corrisponda a quello della gara che si intende modificare
    token = event['queryStringParameters']['token']
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('races')
    response = table.scan(FilterExpression=Attr('token').eq(token))
    if response['Items'] == []:
        message = 'Non esiste alcun evento associato al token'
    else:
        s3 = boto3.client('s3')
        bucket = 'bucketprova12'
        path = '/tmp/gare.xml'
        body = event['body']
        tree = ET.fromstring(body)
        nsp = tree.tag.partition('}')+ "\}"
        return str(nsp)
        a = tree.find('Event',nsp)
        key=(a.find('Name',nsp).text) + '.xml'
        f = open(path, 'w')
        f.write(body)
        f.close()
        s3.upload_file(Filename=path,Bucket=bucket,Key=key)
        message = 'file modificato correttamente'
    
    return {
        'statusCode': 200,
        'body': message
        
    }